% wf2.m
% 例2.5 考虑一个较大的多神经元网络的模式联想的设计问题
P=[1 1.5 1.2 -0.3;-1 2 3 -0.5;2 1 -1.6 0.9];
T=[0.5 3 -2.2 1.4;1.1 -1.2 1.7 -0.4;3 0.2 -1.8 -0.4;-1 0.1 -1.0 0.6];
[S,Q]=size(T);
lr = 0.9*maxlinlr(P);                   %最佳学习速率
W0=[1.9978 -0.5959 -0.3517;1.5543 0.05331 1.3660;
    1.0672 0.3645 -0.9227;-0.7747 1.3839 -0.3384];  %初始权值
B0=[0.0746;-0.0642;-0.4256;-0.6433];
net=newlin(minmax(P),S,[0],lr);         %创建线性网络
net.iw{1,1}=W0;
net.b{1}=B0;
A=sim(net,P);
e=T-A;                                  %求训练前网络的输出误差
sse=(sumsqr(e))/(S*Q);                  %求误差平方和的平均值
fprintf('Before training,sum squared error=%g.\n',sse);     %显示训练前网络的均方差
net.trainParam.epochs=400;              %最大循环次数
net.trainParam.goal=0.001;              %期望误差（均方差）
[net,tr]=train(net,P,T);                %进行线性网络权值训练
W=net.iw{1,1}                           %显示训练后最终的权值和偏差
B=net.b{1}